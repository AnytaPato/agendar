{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["data","id","names","phone","App","state","form","modalInsertar","modalEditar","handleChange","e","setState","target","name","value","mostrarModalInsertar","ocultarModalInsertar","mostrarModalEditar","registro","ocultarModalEditar","insertar","valorNuevo","length","lista","push","editar","dato","contador","map","eliminar","window","confirm","arreglo","splice","modalActualizar","className","Container","Table","this","elemento","Button","onClick","Modal","isOpen","ModalHeader","ModalBody","FormGroup","readOnly","type","onChange","ModalFooter","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.79a95e04.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'; \nimport { Table, Button, Container, Modal, ModalBody, ModalHeader, FormGroup, ModalFooter } from 'reactstrap';\n\n\nconst data = [\n  {id: 1, names: \"Urgencias\", phone: \"911\"},\n  \n  \n  \n  \n]\n\n\nclass App extends React.Component {\n  state = {\n    data: data,\n    form:{\n      id: '',\n      names: '',\n      phone:''\n    },\n    modalInsertar: false,\n    modalEditar: false,\n  };\n\nhandleChange = e => {\n  this.setState({\n    form:{\n    ...this.state.form,\n    [e.target.name]:e.target.value\n    } \n  });\n}\n\nmostrarModalInsertar=()=>{\n  this.setState({modalInsertar: true});\n}\n\nocultarModalInsertar=()=>{\n  this.setState({modalInsertar: false});\n}\n\nmostrarModalEditar=(registro)=>{\n  this.setState({modalEditar: true, form: registro});\n}\n\nocultarModalEditar=()=>{\n  this.setState({modalEditar: false});\n}\n\ninsertar=()=>{\n  var valorNuevo = this.state.form;\n  valorNuevo.id = this.state.data.length+1;\n  var lista = this.state.data;\n  lista.push(valorNuevo);\n  this.setState({data: lista, modalInsertar: false});\n}\n\neditar =(dato)=>{\n  var contador= 0; \n  var lista = this.state.data;\n  lista.map((registro)=>{\n    if(dato.id==registro.id){\n      lista[contador].names=dato.names;\n      lista[contador].phone=dato.phone;\n    }\n    contador++;\n});\nthis.setState({data: lista, modalEditar: false});\n}\n\n eliminar = (dato) => {\n    var opcion = window.confirm(\"Estás Seguro que deseas Eliminar a \"+dato.names + \"?\");\n    if (opcion == true) {\n      var contador = 0;\n      var arreglo = this.state.data;\n      arreglo.map((registro) => {\n        if (dato.id == registro.id) {\n          arreglo.splice(contador, 1);\n        }\n        contador++;\n      });\n      this.setState({ data: arreglo, modalActualizar: false });\n    }\n  };\n\n\n  render() {\n    return (\n      <>\n      \n      <div className=\"fondo\">\n     \n      <Container>\n          <div className=\"title\">\n            <h1>Agenda De Contactos</h1>\n           </div>\n          <div className=\"container\">\n          <br />\n         \n\n          <Table>\n              <thead><tr>\n              <th>Órden</th>\n              <th>Nombre</th>\n              <th>Número</th>\n              \n              </tr></thead>\n          \n\n            <tbody>\n              {this.state.data.map((elemento) => (\n                <tr>\n                  <td>{elemento.id}</td>\n                  <td>{elemento.names}</td>\n                  <td>{elemento.phone}</td>\n                  <td><Button className=\"botones\" onClick={()=>this.mostrarModalEditar(elemento)}>Editar</Button></td>\n                  <td><Button className=\"botones\" onClick={()=>this.eliminar(elemento)}>Eliminar</Button></td>\n                </tr>\n              ))}\n           </tbody>\n           </Table>\n         </div>\n\n         <Button className=\"botones\" onClick = {()=>this.mostrarModalInsertar()}>Agregar nuevo contacto</Button>\n          <br />  <br /> <br />\n          \n       </Container>\n       </div>\n\n             <Modal isOpen={this.state.modalInsertar}>\n               <div className=\"container\">\n          <ModalHeader>\n           <div className=\"title\">\n            <h1>Nuevo Contacto</h1>\n           </div>\n          </ModalHeader>\n\n          <ModalBody>\n           <FormGroup>\n            <label>id:</label>\n            <input className=\"form-control\" readOnly type=\"text\" value={this.state.data.length+1}/>\n         </FormGroup>\n\n         <FormGroup>\n          <label>Nombre:</label>\n            <input className=\"form-control\" name=\"names\" type=\"text\" onChange={this.handleChange}/>\n         </FormGroup>\n\n         <FormGroup>\n           <label>Número:</label>\n          <input className=\"form-control\" name=\"phone\" type=\"text\" onChange={this.handleChange}/>\n         </FormGroup>\n      </ModalBody>\n\n         <ModalFooter>\n           <Button className=\"botones\" onClick={()=>this.insertar()}>Agregar</Button>\n           <Button className=\"botones\" onClick={()=>this.ocultarModalInsertar()}>Cancelar</Button>\n         </ModalFooter>\n         </div>\n      </Modal>\n\n     <Modal isOpen={this.state.modalEditar}>\n       <div className=\"container\">\n       <ModalHeader>\n         <div className=\"title\">\n           <h3>Editar Contacto</h3>\n         </div>\n       </ModalHeader>\n\n       <ModalBody>\n         <FormGroup>\n           <label>Id:</label>\n           <input className=\"form-control\" readOnly type=\"text\" value={this.state.form.id}/>\n         </FormGroup>\n\n        \n         <FormGroup>\n           <label>Nombre:</label>\n           <input className=\"form-control\" name=\"names\" type=\"text\" onChange={this.handleChange} value={this.state.form.names}/>\n         </FormGroup>\n\n       \n         <FormGroup>\n           <label>Nùmero:</label>\n           <input className=\"form-control\" name=\"phone\" type=\"text\" onChange={this.handleChange} value={this.state.form.phone} />\n         </FormGroup>\n       </ModalBody>\n\n       <ModalFooter>\n       <Button  className=\"botones\" onClick={()=>this.editar(this.state.form)}>Aceptar</Button>\n       <Button className=\"botones\" onClick={()=>this.ocultarModalEditar()}>Cancelar</Button>\n       </ModalFooter>\n       </div>\n    </Modal>  \n\n  \n  </>\n  \n    )\n  }\n};  \n\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}